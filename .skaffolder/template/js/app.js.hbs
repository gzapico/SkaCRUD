**** PROPERTIES SKAFFOLDER ****
{
    "forEachObj": "oneTime",
    "_partials": [
        {
            "tagTo": "// END - ROUTE",
            "tagFrom": "// START - ROUTE",
            "template": "{{#each modules}}\n\t.when('{{#editUrlParam url}}{{/editUrlParam}}', {\n\t  templateUrl: 'html/{{name}}.html',{{#isEmptyArray _roles}}\n\t  resolve: {\n\t\t  user: [\"AuthenticationService\", function(AuthenticationService) { return AuthenticationService.isAuthenticated(); }]\n\t  },{{/isEmptyArray}}{{#notEmpty _roles}}\n\t  resolve: {\n\t\t  user: [\"AuthenticationService\", function(AuthenticationService) { return AuthenticationService.hasRole([ {{#each _roles}}'{{name}}',{{/each}} ]); }]\n\t  },{{/notEmpty}}\n\t})\n\t{{/each}}",
            "name": "Partial Routes"
        }
    ]
}
**** END PROPERTIES SKAFFOLDER ****


var app = angular.module('{{project.name}}_App', [
'ngRoute',
'ngResource'
]).config(function ($routeProvider) {
	
	$routeProvider
	
//DO NOT EDIT THIS ROUTES, USE NEXT COMMENT SECTION

// START - ROUTE		
// END - ROUTE

// INSERT HERE YOUR CUSTOM ROUTES
		

// DEFAULT ROUTES
    .when('/profile', {
      templateUrl: 'js/security/profile/Profile.html',
      resolve: {
          user: ["AuthenticationService", function(AuthenticationService) { return AuthenticationService.isAuthenticated(); }]
      },
    })
    .when('/manage-users', {
      templateUrl: 'js/security/manageUser/UsersList.html',
      resolve: {
          user: ["AuthenticationService", function(AuthenticationService) { return AuthenticationService.hasRole("ADMIN"); }]
      },
    })
    .when('/manage-users/:id', {
      templateUrl: 'js/security/manageUser/UsersEdit.html',
      resolve: {
          user: ["AuthenticationService", function(AuthenticationService) { return AuthenticationService.hasRole("ADMIN"); }]
      },
    })
	.when('/login', {
	    templateUrl: 'html/Login.html',
	    controller: 'LoginController'
	})
	.when('/logout', {
	      templateUrl: 'html/Login.html',
	      controller: 'LogoutController',
    	  resolve: {
    		  user: ["AuthenticationService", function(AuthenticationService) { return AuthenticationService.isAuthenticated(); }]
    	  },
	})
	.when('/', {
	      templateUrl: 'html/Home.html',
    	  resolve: {
    		  user: ["AuthenticationService", function(AuthenticationService) { return AuthenticationService.isAuthenticated(); }]
    	  },
	})
	.otherwise({
		templateUrl: 'html/404.html',
	});
	
});